// File: mainwindow.cpp
#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <QRandomGenerator>
#include <QColor>
#include <QPalette>
#include <wiringPi.h>  // Для работы с GPIO

#define BUTTON_PIN 0  // GPIO17

MainWindow::MainWindow(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::MainWindow)
{
    ui->setupUi(this);

    // Инициализация библиотеки WiringPi и настройка пина
    if (wiringPiSetup() == -1) {
        qFatal("WiringPi setup failed!");
    }
    pinMode(BUTTON_PIN, INPUT);  // Устанавливаем пин как вход
    pullUpDnControl(BUTTON_PIN, PUD_UP);  // Включаем встроенный pull-up резистор

    // Подключение кнопки на интерфейсе к обработчику
    connect(ui->pushButton, &QPushButton::clicked, this, &MainWindow::onButtonClicked);
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::onButtonClicked()
{
    // Чтение состояния кнопки с GPIO
    if (digitalRead(BUTTON_PIN) == LOW) {  // LOW означает, что кнопка нажата
        // Генерация случайного цвета
        QColor randomColor(QRandomGenerator::global()->bounded(256),  // Красный
                           QRandomGenerator::global()->bounded(256),  // Зеленый
                           QRandomGenerator::global()->bounded(256)); // Синий

        // Изменение цвета фона формы
        QPalette pal = ui->centralWidget->palette();
        pal.setColor(QPalette::Background, randomColor);
        ui->centralWidget->setAutoFillBackground(true);
        ui->centralWidget->setPalette(pal);
    }
}
